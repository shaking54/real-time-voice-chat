{"ast":null,"code":"import React,{useState,useRef}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";const VoiceInput=_ref=>{let{onAudioSend}=_ref;const[recording,setRecording]=useState(false);const mediaRecorderRef=useRef(null);// Store mediaRecorder instance\nconst audioChunksRef=useRef([]);// Store audio data\nconst startRecording=async()=>{try{const stream=await navigator.mediaDevices.getUserMedia({audio:true});const mediaRecorder=new MediaRecorder(stream);mediaRecorder.ondataavailable=event=>{audioChunksRef.current.push(event.data);};mediaRecorder.onstop=async()=>{const audioBlob=new Blob(audioChunksRef.current,{type:\"audio/wav\"});audioChunksRef.current=[];// Clear chunks\nsendAudioToBackend(audioBlob);};mediaRecorderRef.current=mediaRecorder;// Store instance\nmediaRecorder.start();setRecording(true);}catch(error){console.error(\"Error accessing microphone:\",error);}};const stopRecording=()=>{if(mediaRecorderRef.current&&mediaRecorderRef.current.state===\"recording\"){mediaRecorderRef.current.stop();setRecording(false);}};const sendAudioToBackend=async audioBlob=>{const formData=new FormData();formData.append(\"audio\",audioBlob);try{const response=await fetch(\"http://localhost:8000/api/audio-input\",{method:\"POST\",body:formData});if(response.ok){const audioRes=await response.blob();onAudioSend(audioRes);}}catch(error){console.error(\"Error sending audio to backend:\",error);}};return/*#__PURE__*/_jsx(\"div\",{children:!recording?/*#__PURE__*/_jsx(\"button\",{onClick:startRecording,children:\"\\uD83C\\uDF99\\uFE0F Start Talking\"}):/*#__PURE__*/_jsx(\"button\",{onClick:stopRecording,children:\"\\u23F9\\uFE0F Stop\"})});};export default VoiceInput;","map":{"version":3,"names":["React","useState","useRef","jsx","_jsx","VoiceInput","_ref","onAudioSend","recording","setRecording","mediaRecorderRef","audioChunksRef","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","mediaRecorder","MediaRecorder","ondataavailable","event","current","push","data","onstop","audioBlob","Blob","type","sendAudioToBackend","start","error","console","stopRecording","state","stop","formData","FormData","append","response","fetch","method","body","ok","audioRes","blob","children","onClick"],"sources":["/home/shaking/qlay/real-time-voice-chat/frontend/src/components/VoiceInput.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\n\nconst VoiceInput = ({ onAudioSend }) => {\n  const [recording, setRecording] = useState(false);\n  const mediaRecorderRef = useRef(null); // Store mediaRecorder instance\n  const audioChunksRef = useRef([]); // Store audio data\n\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      const mediaRecorder = new MediaRecorder(stream);\n\n      mediaRecorder.ondataavailable = (event) => {\n        audioChunksRef.current.push(event.data);\n      };\n\n      mediaRecorder.onstop = async () => {\n        const audioBlob = new Blob(audioChunksRef.current, { type: \"audio/wav\" });\n        audioChunksRef.current = []; // Clear chunks\n        sendAudioToBackend(audioBlob);\n      };\n\n      mediaRecorderRef.current = mediaRecorder; // Store instance\n      mediaRecorder.start();\n      setRecording(true);\n    } catch (error) {\n      console.error(\"Error accessing microphone:\", error);\n    }\n  };\n\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state === \"recording\") {\n      mediaRecorderRef.current.stop();\n      setRecording(false);\n    }\n  };\n\n  const sendAudioToBackend = async (audioBlob) => {\n    const formData = new FormData();\n    formData.append(\"audio\", audioBlob);\n\n    try {\n      const response = await fetch(\"http://localhost:8000/api/audio-input\", {\n        method: \"POST\",\n        body: formData,\n      });\n\n      if (response.ok) {\n        const audioRes = await response.blob();\n        onAudioSend(audioRes);\n      }\n    } catch (error) {\n      console.error(\"Error sending audio to backend:\", error);\n    }\n  };\n\n  return (\n    <div>\n      {!recording ? (\n        <button onClick={startRecording}>üéôÔ∏è Start Talking</button>\n      ) : (\n        <button onClick={stopRecording}>‚èπÔ∏è Stop</button>\n      )}\n    </div>\n  );\n};\n\nexport default VoiceInput;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,MAAM,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEhD,KAAM,CAAAC,UAAU,CAAGC,IAAA,EAAqB,IAApB,CAAEC,WAAY,CAAC,CAAAD,IAAA,CACjC,KAAM,CAACE,SAAS,CAAEC,YAAY,CAAC,CAAGR,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAAAS,gBAAgB,CAAGR,MAAM,CAAC,IAAI,CAAC,CAAE;AACvC,KAAM,CAAAS,cAAc,CAAGT,MAAM,CAAC,EAAE,CAAC,CAAE;AAEnC,KAAM,CAAAU,cAAc,CAAG,KAAAA,CAAA,GAAY,CACjC,GAAI,CACF,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAAC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC,CAAEC,KAAK,CAAE,IAAK,CAAC,CAAC,CACzE,KAAM,CAAAC,aAAa,CAAG,GAAI,CAAAC,aAAa,CAACN,MAAM,CAAC,CAE/CK,aAAa,CAACE,eAAe,CAAIC,KAAK,EAAK,CACzCV,cAAc,CAACW,OAAO,CAACC,IAAI,CAACF,KAAK,CAACG,IAAI,CAAC,CACzC,CAAC,CAEDN,aAAa,CAACO,MAAM,CAAG,SAAY,CACjC,KAAM,CAAAC,SAAS,CAAG,GAAI,CAAAC,IAAI,CAAChB,cAAc,CAACW,OAAO,CAAE,CAAEM,IAAI,CAAE,WAAY,CAAC,CAAC,CACzEjB,cAAc,CAACW,OAAO,CAAG,EAAE,CAAE;AAC7BO,kBAAkB,CAACH,SAAS,CAAC,CAC/B,CAAC,CAEDhB,gBAAgB,CAACY,OAAO,CAAGJ,aAAa,CAAE;AAC1CA,aAAa,CAACY,KAAK,CAAC,CAAC,CACrBrB,YAAY,CAAC,IAAI,CAAC,CACpB,CAAE,MAAOsB,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,CAAEA,KAAK,CAAC,CACrD,CACF,CAAC,CAED,KAAM,CAAAE,aAAa,CAAGA,CAAA,GAAM,CAC1B,GAAIvB,gBAAgB,CAACY,OAAO,EAAIZ,gBAAgB,CAACY,OAAO,CAACY,KAAK,GAAK,WAAW,CAAE,CAC9ExB,gBAAgB,CAACY,OAAO,CAACa,IAAI,CAAC,CAAC,CAC/B1B,YAAY,CAAC,KAAK,CAAC,CACrB,CACF,CAAC,CAED,KAAM,CAAAoB,kBAAkB,CAAG,KAAO,CAAAH,SAAS,EAAK,CAC9C,KAAM,CAAAU,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,CAAEZ,SAAS,CAAC,CAEnC,GAAI,CACF,KAAM,CAAAa,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,uCAAuC,CAAE,CACpEC,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEN,QACR,CAAC,CAAC,CAEF,GAAIG,QAAQ,CAACI,EAAE,CAAE,CACf,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAL,QAAQ,CAACM,IAAI,CAAC,CAAC,CACtCtC,WAAW,CAACqC,QAAQ,CAAC,CACvB,CACF,CAAE,MAAOb,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,CAAEA,KAAK,CAAC,CACzD,CACF,CAAC,CAED,mBACE3B,IAAA,QAAA0C,QAAA,CACG,CAACtC,SAAS,cACTJ,IAAA,WAAQ2C,OAAO,CAAEnC,cAAe,CAAAkC,QAAA,CAAC,kCAAiB,CAAQ,CAAC,cAE3D1C,IAAA,WAAQ2C,OAAO,CAAEd,aAAc,CAAAa,QAAA,CAAC,mBAAO,CAAQ,CAChD,CACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAzC,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}